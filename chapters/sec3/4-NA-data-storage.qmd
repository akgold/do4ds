## Some notes if you're administering the service

This chapter has mostly been intended for consumption by app authors who
will be creating data science assets. But in some cases, you might also
have to administer the service yourself. Here are a few tips and
thoughts.

Choosing which database to use in a given case is very complicated.
There are dozens and dozens of different kinds of databases, and many
different vendors, all trying to convince you that theirs is superior.

If you're doing certain kinds of bespoke analytics, then it might really
matter. In my experience, using Postgres is good enough for most things
involving rectangular data of moderate size, and a storage bucket is
often good enough for things you might be tempted to put in a NoSQL
database until the complexity of the data gets very large.

Either way, a database as a service is a pretty basic cloud service. For
example, AWS's RDS is their simplest database service, and you can get a
PostgreSQL, MySQL, MariaDB, or SQL Server database for very reasonable
pricing.[^1] It works well for reasonably sized data loads (up to 64Tb).

[^1]: You can also do an Oracle database if you have a license, but if
    you're reading this, you almost certainly don't have an Oracle
    license you have to use. Consider yourself lucky.

AWS RDS is optimized for individual transactions. In some cases, you
might want to consider a full data warehouse. AWS's full data warehouse
is called Redshift and it runs a flavor of PostgreSQL. In general it's
better when you have a lot of data (goes up to several petabytes) or are
doing demanding queries a lot more often than you're querying for
individual rows. Redshift is a good bit more expensive, so it's worth
keeping that in mind.

If you're storing data on a share drive, you'll have to make sure that
it's available in your prod environment. This process is called mounting
a drive or volume onto a server. It's quite a straightforward process,
but needing to mount a drive into two different servers places some
constraints on where those servers have to be.

\<TODO: picture of mounting a drive\>

When you're working in the cloud, you'll get compute separate from
volumes. This works nicely, because you can get the compute you need and
separately choose a volume size that works for you. There are many nice
tools around volumes that often include automated backups, and the
ability to easily move snapshots from place to place -- including just
moving the same data onto a larger drive in just a few minutes.

EBS is AWS's name for their standard storage volumes. You get one
whenever you create an EC2 instance.

In some cases, you'll need to have a drive that's mounted to multiple
machines at once. In that case you'll need some sort of network drive.

The mounting process works exactly the same, but the underlying
technology needs to be a little more complex to accommodate how it
works. Depending on whether you're talking about connecting multiple
Linux hosts, you might use NFS (Network File Share), or SMB/CIFS
(Windows only), or some combination of the two might use Samba. If
you're getting to this level, it's probably a good idea to involve a
professional IT/Admin.

## 
