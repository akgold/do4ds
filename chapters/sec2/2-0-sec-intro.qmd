# The DIY Data Science Environment {#sec-2-intro}

Administering your own data science environment is -- in general -- a
situation to be avoided.

There's a reason IT Administration is a career all to itself. There's so
much to know about servers, networking, managing users, storage, and
more. And it's scary -- it's easy to run into pitfalls that cause
security vulnerabilities, system instability, and general annoyance.

But if you're reading this, you probably don't care about all that. You
want to learn how to manage a server-based data science environment
safely and securely.

The first bit of good news is that it's not magic. There are
well-understood patterns and principles to guide the administration of
servers and applying those to a data science environment is
straightforward. We're going to get into that.

The second bit of good news is that you're in the right place.

There are a huge variety of reasons people in the world want to manage
servers, but this book is targeted at the two most compelling reasons
*data scientists* want to manage servers -- running a data science
workbench for your team or hosting a data product you've created for
others to consume.

## What's actually in this section

This section has five chapters, each on a major topic in how to acquire
and manage your own server.

We'll start by learning about what *the cloud* is and how you can use
it, get into using the command line to manage a remote server, talk
about administering a Linux server in general, talk about the basics of
computer networking, and finally discuss the nitty gritty of what a
server actually is, how it works, and how to choose the right one for
your use case.

In addition to the sharing some (hopefully) useful mental models on each
of these topics, each chapter includes a lab. These labs will walk you
through getting a server from Amazon Web Services (AWS), administering
it, securing it, and hosting it at a real location on the internet.

By the time you're done you'll have set up a server with RStudio and
JupyterHub configured to use. We'll also walk through how to host a
Shiny app and an API on that server.

By the time you've finished, you'll not only be able to set up a server
for yourself or your team, you'll understand *why* you did each of the
things you did.

It's worth saying that the way we're doing this is going to work with
the most basic primitives of cloud computing. The first reason for that
is that it's cheaper. Understandably, using simpler cloud services is
cheaper than using more expensive ones. If you follow this all the way
to the end, it won't be zero cost, but you could pay less than \$10.

The second reason is that it's better for comprehension. All of cloud
computing relies on the primitives we'll use here (at it's inception,
the goal of AWS was to create an Operating System for the internet).
Once you understand these primitives, you'll have no trouble using other
services to accomplish the same ends if you'd prefer a less DIY
experience.

Let's get started.

